#log {
#    module: DEFAULT
#    enable: trace+
#    includeTimestamp: yes
#}

router {
    mode: interior
    id: Router.R
}

#SSL Profile for Router 01
sslProfile {
    name: inter-router-tls
    certFile: /etc/qpid-dispatch/router.crt
    privateKeyFile: /etc/qpid-dispatch/router-private-key.key
    caCertFile: /etc/qpid-dispatch/server-ca.crt
    password: redhat
}

#Listener for Router 01
listener {
    host: 0.0.0.0
    port: 5773
    authenticatePeer: yes
    sslProfile: inter-router-tls
    requireSsl: yes
    role: inter-router
    saslMechanisms: EXTERNAL
}

sslProfile {
    name: broker-tls
    caCertFile: /etc/qpid-dispatch/server-ca.crt
    certFile: /etc/qpid-dispatch/router.crt
    privateKeyFile: /etc/qpid-dispatch/router-private-key.key
    password:  pass:redhat
}

connector {
    name: broker-connector-1
    host: 10.249.64.11
    port: 61616
    role: route-container
    sslProfile: broker-tls

    # https://qpid.apache.org/releases/qpid-dispatch-1.7.0/user-guide/index.html#adding-ssl-authentication-to-outgoing-connection
    # To specify multiple authentication mechanisms, separate each mechanism with a space.
#    saslMechanisms: EXTERNAL
#    saslUsername: admin
#    saslPassword: redhat
    verifyHostname: no
}

#connector {
#    name: broker-connector-1
#    host: 10.249.64.11
#    port: 61616
#    role: route-container
#    sslProfile: broker-tls
#    saslMechanisms: EXTERNAL
#    verifyHostname: no
#}

# Waypoint for the Broker Queue
address {
    prefix: SampleQueue
    waypoint: yes
}

# Create Autolink to send messages to the broker 1
autoLink {
    address: SampleQueue
    connection: broker-connector-1
    direction: out
}

autoLink {
    address: SampleQueue
    connection: broker-connector-1
    direction: in
}

listener {
    host: 0.0.0.0
    port: amqp
    authenticatePeer: no
    saslMechanisms: ANONYMOUS
}

listener {
    host: 0.0.0.0
    port: 8672
    authenticatePeer: no
    http: yes
}

address {
    prefix: closest
    distribution: closest
}

address {
    prefix: multicast
    distribution: multicast
}

address {
    prefix: unicast
    distribution: closest
}

address {
    prefix: exclusive
    distribution: closest
}

address {
    prefix: broadcast
    distribution: multicast
}


